@model Ecommerce.Models.Urunler
@using Ecommerce.Models;
@using System.Linq;

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/AdminPanel.cshtml";
    List<Kategori> listItems = new List<Kategori>();
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Urunler</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UrunID)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Currency, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.Currency, new List<SelectListItem>
            {
                 new SelectListItem() {Text = "₺", Value="türklirası"},
                 new SelectListItem() {Text = "$", Value="dolar"},
                 new SelectListItem() {Text = "€", Value="euro"}
             })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductUnit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductUnit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Quantity, new List<SelectListItem>
           {
               new SelectListItem() {Text="10", Value="10"},
               new SelectListItem() {Text="15",Value="15" },
               new SelectListItem() {Text="20", Value="20"},
               new SelectListItem() {Text="25",Value="25" }
           })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OrderedQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderedQuantity, new { htmlAttributes = new { @class = "form-control" , disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.OrderedQuantity, "", new { @class = "text-danger", })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductPicture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductPicture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductPicture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KategoriAdi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    eTicaretEntities1 db = new eTicaretEntities1();
                    listItems = db.Kategori.Where(x => x.ID > 0).ToList();
                }

                @Html.DropDownListFor(model => model.CategoryID, new SelectList(listItems, "ID", "CategoryName"))
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
